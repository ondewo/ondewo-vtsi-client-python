"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2021 ONDEWO GmbH

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _SortingMode:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _SortingModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_SortingMode.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ASCENDING: _SortingMode.ValueType  # 0
    """ascending sorting"""
    DESCENDING: _SortingMode.ValueType  # 1
    """descending sorting"""

class SortingMode(_SortingMode, metaclass=_SortingModeEnumTypeWrapper):
    """Sorting mode"""

ASCENDING: SortingMode.ValueType  # 0
"""ascending sorting"""
DESCENDING: SortingMode.ValueType  # 1
"""descending sorting"""
global___SortingMode = SortingMode

@typing_extensions.final
class StatResponse(google.protobuf.message.Message):
    """statistic response"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.int
    """Response wrapper for the "Get<Stat>" endpoints"""
    def __init__(
        self,
        *,
        value: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["value", b"value"]) -> None: ...

global___StatResponse = StatResponse
