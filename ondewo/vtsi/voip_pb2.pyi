"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.empty_pb2
import google.protobuf.internal.containers
import google.protobuf.message
import ondewo.nlu.context_pb2
import ondewo.s2t.speech_to_text_pb2
import ondewo.t2s.text_to_speech_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

class VoipManifest(google.protobuf.message.Message):
    """////////////
    MANIFEST //
    ////////////

    manifest of calls to perform and listener-instances to start
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MANIFEST_ID_FIELD_NUMBER: builtins.int
    CONTEXTS_FIELD_NUMBER: builtins.int
    CALLERS_FIELD_NUMBER: builtins.int
    manifest_id: typing.Text = ...
    """ID of the manifest"""

    @property
    def contexts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ondewo.nlu.context_pb2.Context]:
        """ondewo-cai context information for all caller instances"""
        pass
    @property
    def callers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StartCallInstanceRequest]:
        """list of calls to perform"""
        pass
    def __init__(self,
        *,
        manifest_id : typing.Text = ...,
        contexts : typing.Optional[typing.Iterable[ondewo.nlu.context_pb2.Context]] = ...,
        callers : typing.Optional[typing.Iterable[global___StartCallInstanceRequest]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["callers",b"callers","contexts",b"contexts","manifest_id",b"manifest_id"]) -> None: ...
global___VoipManifest = VoipManifest

class ManifestRequest(google.protobuf.message.Message):
    """request sent to a manifest-related endpoint with its ID"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MANIFEST_ID_FIELD_NUMBER: builtins.int
    manifest_id: typing.Text = ...
    """ID of the manifest to remove"""

    def __init__(self,
        *,
        manifest_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["manifest_id",b"manifest_id"]) -> None: ...
global___ManifestRequest = ManifestRequest

class RunManifestResponse(google.protobuf.message.Message):
    """response sent by the voip server when attempting to remove a manifest"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_FIELD_NUMBER: builtins.int
    STARTED_FIELD_NUMBER: builtins.int
    @property
    def request(self) -> global___ManifestRequest: ...
    started: builtins.bool = ...
    """whether the run operation started"""

    def __init__(self,
        *,
        request : typing.Optional[global___ManifestRequest] = ...,
        started : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["request",b"request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request",b"request","started",b"started"]) -> None: ...
global___RunManifestResponse = RunManifestResponse

class RemoveManifestResponse(google.protobuf.message.Message):
    """response sent by the voip server when attempting to remove a complete manifest"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_FIELD_NUMBER: builtins.int
    SUCCESS_FIELD_NUMBER: builtins.int
    CALLER_RESPONSES_FIELD_NUMBER: builtins.int
    @property
    def request(self) -> global___ManifestRequest: ...
    success: builtins.bool = ...
    """whether the removal succeeded"""

    @property
    def caller_responses(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StopCallInstanceResponse]:
        """responses"""
        pass
    def __init__(self,
        *,
        request : typing.Optional[global___ManifestRequest] = ...,
        success : builtins.bool = ...,
        caller_responses : typing.Optional[typing.Iterable[global___StopCallInstanceResponse]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["request",b"request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["caller_responses",b"caller_responses","request",b"request","success",b"success"]) -> None: ...
global___RemoveManifestResponse = RemoveManifestResponse

class BaseServiceConfig(google.protobuf.message.Message):
    """base configuration of services (ondewo-cai, text-to-speech, speech-to-text, asterisk)"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HOST_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    GRPC_CERT_FIELD_NUMBER: builtins.int
    host: typing.Text = ...
    """service host IP"""

    port: builtins.int = ...
    """service port"""

    grpc_cert: typing.Text = ...
    """Optional: GRPC cert for the given service"""

    def __init__(self,
        *,
        host : typing.Text = ...,
        port : builtins.int = ...,
        grpc_cert : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["grpc_cert",b"grpc_cert","host",b"host","port",b"port"]) -> None: ...
global___BaseServiceConfig = BaseServiceConfig

class Credentials(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ACCOUNT_NAME_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    account_name: typing.Text = ...
    password: typing.Text = ...
    def __init__(self,
        *,
        account_name : typing.Text = ...,
        password : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["account_name",b"account_name","password",b"password"]) -> None: ...
global___Credentials = Credentials

class NLUConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BASE_CONFIG_FIELD_NUMBER: builtins.int
    CREDENTIALS_FIELD_NUMBER: builtins.int
    AUTH_TOKEN_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    PROJECT_ID_FIELD_NUMBER: builtins.int
    INITIAL_INTENT_FIELD_NUMBER: builtins.int
    CONTEXTS_FIELD_NUMBER: builtins.int
    @property
    def base_config(self) -> global___BaseServiceConfig:
        """Base config
        Host, Port, and [Optional] GRPC cert
        """
        pass
    @property
    def credentials(self) -> global___Credentials: ...
    auth_token: typing.Text = ...
    language_code: typing.Text = ...
    """language code
    See [Language Support](https://dialogflow.com/docs/reference/language)
    for a list of the currently supported language codes.
    """

    project_id: typing.Text = ...
    """ondewo-cai project ID with which to perform the call"""

    initial_intent: typing.Text = ...
    """name of intent to trigger at the start of a call"""

    @property
    def contexts(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[ondewo.nlu.context_pb2.Context]:
        """ondewo-cai list of contexts"""
        pass
    def __init__(self,
        *,
        base_config : typing.Optional[global___BaseServiceConfig] = ...,
        credentials : typing.Optional[global___Credentials] = ...,
        auth_token : typing.Text = ...,
        language_code : typing.Text = ...,
        project_id : typing.Text = ...,
        initial_intent : typing.Text = ...,
        contexts : typing.Optional[typing.Iterable[ondewo.nlu.context_pb2.Context]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["auth_token",b"auth_token","authentication",b"authentication","base_config",b"base_config","credentials",b"credentials"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["auth_token",b"auth_token","authentication",b"authentication","base_config",b"base_config","contexts",b"contexts","credentials",b"credentials","initial_intent",b"initial_intent","language_code",b"language_code","project_id",b"project_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["authentication",b"authentication"]) -> typing.Optional[typing_extensions.Literal["credentials","auth_token"]]: ...
global___NLUConfig = NLUConfig

class T2SConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BASE_CONFIG_FIELD_NUMBER: builtins.int
    T2S_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def base_config(self) -> global___BaseServiceConfig:
        """Host, Port, and [Optional] GRPC cert"""
        pass
    @property
    def t2s_config(self) -> ondewo.t2s.text_to_speech_pb2.RequestConfig: ...
    def __init__(self,
        *,
        base_config : typing.Optional[global___BaseServiceConfig] = ...,
        t2s_config : typing.Optional[ondewo.t2s.text_to_speech_pb2.RequestConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["base_config",b"base_config","t2s_config",b"t2s_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["base_config",b"base_config","t2s_config",b"t2s_config"]) -> None: ...
global___T2SConfig = T2SConfig

class S2TConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BASE_CONFIG_FIELD_NUMBER: builtins.int
    S2T_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def base_config(self) -> global___BaseServiceConfig:
        """Host, Port, and [Optional] GRPC cert"""
        pass
    @property
    def s2t_config(self) -> ondewo.s2t.speech_to_text_pb2.TranscribeRequestConfig: ...
    def __init__(self,
        *,
        base_config : typing.Optional[global___BaseServiceConfig] = ...,
        s2t_config : typing.Optional[ondewo.s2t.speech_to_text_pb2.TranscribeRequestConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["base_config",b"base_config","s2t_config",b"s2t_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["base_config",b"base_config","s2t_config",b"s2t_config"]) -> None: ...
global___S2TConfig = S2TConfig

class AsteriskConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BASE_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def base_config(self) -> global___BaseServiceConfig:
        """Host, Port, and [Optional] GRPC cert"""
        pass
    def __init__(self,
        *,
        base_config : typing.Optional[global___BaseServiceConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["base_config",b"base_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["base_config",b"base_config"]) -> None: ...
global___AsteriskConfig = AsteriskConfig

class CommonServicesConfigs(google.protobuf.message.Message):
    """It is common for both inbound and outbound / listener and caller"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ASTERISK_CONFIG_FIELD_NUMBER: builtins.int
    CAI_CONFIG_FIELD_NUMBER: builtins.int
    STT_CONFIG_FIELD_NUMBER: builtins.int
    TTS_CONFIG_FIELD_NUMBER: builtins.int
    CSI_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def asterisk_config(self) -> global___AsteriskConfig:
        """Asterisk service configuration"""
        pass
    @property
    def cai_config(self) -> global___NLUConfig:
        """ondewo-cai configuration"""
        pass
    @property
    def stt_config(self) -> global___S2TConfig:
        """speech-to-text service configuration"""
        pass
    @property
    def tts_config(self) -> global___T2SConfig:
        """text-to-speech service configuration"""
        pass
    @property
    def csi_config(self) -> global___CsiConfig:
        """csi service configuration"""
        pass
    def __init__(self,
        *,
        asterisk_config : typing.Optional[global___AsteriskConfig] = ...,
        cai_config : typing.Optional[global___NLUConfig] = ...,
        stt_config : typing.Optional[global___S2TConfig] = ...,
        tts_config : typing.Optional[global___T2SConfig] = ...,
        csi_config : typing.Optional[global___CsiConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asterisk_config",b"asterisk_config","cai_config",b"cai_config","csi_config",b"csi_config","stt_config",b"stt_config","tts_config",b"tts_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asterisk_config",b"asterisk_config","cai_config",b"cai_config","csi_config",b"csi_config","stt_config",b"stt_config","tts_config",b"tts_config"]) -> None: ...
global___CommonServicesConfigs = CommonServicesConfigs

class SIPConfig(google.protobuf.message.Message):
    """The base config is for both the listener and caller .. If you only provide it you will get a listener
    You will need to provide SIPCallerConfig for the caller
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    class AccountPasswordDictionaryEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class HeadersEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text = ...
        value: typing.Text = ...
        def __init__(self,
            *,
            key : typing.Text = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    CALL_ID_FIELD_NUMBER: builtins.int
    CALL_DISPLAY_NAME_FIELD_NUMBER: builtins.int
    SIP_SIM_VERSION_FIELD_NUMBER: builtins.int
    SIP_PREFIX_FIELD_NUMBER: builtins.int
    SIP_ACCOUNT_FIELD_NUMBER: builtins.int
    ACCOUNT_PASSWORD_DICTIONARY_FIELD_NUMBER: builtins.int
    PHONE_NUMBER_FIELD_NUMBER: builtins.int
    HEADERS_FIELD_NUMBER: builtins.int
    call_id: typing.Text = ...
    """uuid of the call instance [optional] .. It's created if not provided"""

    call_display_name: typing.Text = ...
    """display name (or description) (can be filled with the NLU project name if not provided)"""

    sip_sim_version: typing.Text = ...
    """version of sip to use for call"""

    sip_prefix: typing.Text = ...
    """you either use sip_account for an exact sip instance .. or sip_prefix to get one or instances matched
    prefix of sip name and sip container name
    """

    sip_account: typing.Text = ...
    """name of the sip instance which is in Asterisk"""

    @property
    def account_password_dictionary(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """password dictionary is passed depending on the account info you have in asterisk's sip.conf
        dictionary of sip accounts and passwords that are in Asterisk
        """
        pass
    phone_number: typing.Text = ...
    """phone number to call"""

    @property
    def headers(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """dictionary of sip headers that are sent on call"""
        pass
    def __init__(self,
        *,
        call_id : typing.Text = ...,
        call_display_name : typing.Text = ...,
        sip_sim_version : typing.Text = ...,
        sip_prefix : typing.Text = ...,
        sip_account : typing.Text = ...,
        account_password_dictionary : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        phone_number : typing.Text = ...,
        headers : typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["account_password_dictionary",b"account_password_dictionary","call_display_name",b"call_display_name","call_id",b"call_id","headers",b"headers","phone_number",b"phone_number","sip_account",b"sip_account","sip_prefix",b"sip_prefix","sip_sim_version",b"sip_sim_version"]) -> None: ...
global___SIPConfig = SIPConfig

class CsiConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    S2T_CALLBACKS_FIELD_NUMBER: builtins.int
    NLU_CALLBACKS_FIELD_NUMBER: builtins.int
    T2S_CALLBACKS_FIELD_NUMBER: builtins.int
    AUDIO_OBJECT_STORE_CONFIG_FIELD_NUMBER: builtins.int
    MESSAGE_BROKER_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def s2t_callbacks(self) -> global___S2tCallbacks: ...
    @property
    def nlu_callbacks(self) -> global___NluCallbacks: ...
    @property
    def t2s_callbacks(self) -> global___T2sCallbacks: ...
    @property
    def audio_object_store_config(self) -> global___AudioObjectStorageConfig: ...
    @property
    def message_broker_config(self) -> global___MessageBrokerConfig: ...
    def __init__(self,
        *,
        s2t_callbacks : typing.Optional[global___S2tCallbacks] = ...,
        nlu_callbacks : typing.Optional[global___NluCallbacks] = ...,
        t2s_callbacks : typing.Optional[global___T2sCallbacks] = ...,
        audio_object_store_config : typing.Optional[global___AudioObjectStorageConfig] = ...,
        message_broker_config : typing.Optional[global___MessageBrokerConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["audio_object_store_config",b"audio_object_store_config","message_broker_config",b"message_broker_config","nlu_callbacks",b"nlu_callbacks","s2t_callbacks",b"s2t_callbacks","t2s_callbacks",b"t2s_callbacks"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["audio_object_store_config",b"audio_object_store_config","message_broker_config",b"message_broker_config","nlu_callbacks",b"nlu_callbacks","s2t_callbacks",b"s2t_callbacks","t2s_callbacks",b"t2s_callbacks"]) -> None: ...
global___CsiConfig = CsiConfig

class AudioObjectStorageConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MINIO_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def minio_config(self) -> global___MinioConfig: ...
    def __init__(self,
        *,
        minio_config : typing.Optional[global___MinioConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["audio_storage_config",b"audio_storage_config","minio_config",b"minio_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["audio_storage_config",b"audio_storage_config","minio_config",b"minio_config"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["audio_storage_config",b"audio_storage_config"]) -> typing.Optional[typing_extensions.Literal["minio_config"]]: ...
global___AudioObjectStorageConfig = AudioObjectStorageConfig

class MessageBrokerConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    RABBIT_MQ_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def rabbit_mq_config(self) -> global___RabbitMqConfig: ...
    def __init__(self,
        *,
        rabbit_mq_config : typing.Optional[global___RabbitMqConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["message_broker_config",b"message_broker_config","rabbit_mq_config",b"rabbit_mq_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["message_broker_config",b"message_broker_config","rabbit_mq_config",b"rabbit_mq_config"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["message_broker_config",b"message_broker_config"]) -> typing.Optional[typing_extensions.Literal["rabbit_mq_config"]]: ...
global___MessageBrokerConfig = MessageBrokerConfig

class RabbitMqConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HOST_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    PORT_2_FIELD_NUMBER: builtins.int
    USER_FIELD_NUMBER: builtins.int
    PASSWORD_FIELD_NUMBER: builtins.int
    host: typing.Text = ...
    """host where the rabbit mq server runs"""

    port: typing.Text = ...
    """port where the rabbit mq server runs"""

    port_2: typing.Text = ...
    """port where the rabbit mq server runs"""

    user: typing.Text = ...
    """user of server"""

    password: typing.Text = ...
    """password of server"""

    def __init__(self,
        *,
        host : typing.Text = ...,
        port : typing.Text = ...,
        port_2 : typing.Text = ...,
        user : typing.Text = ...,
        password : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["host",b"host","password",b"password","port",b"port","port_2",b"port_2","user",b"user"]) -> None: ...
global___RabbitMqConfig = RabbitMqConfig

class Endpoint(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HOST_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    host: typing.Text = ...
    port: typing.Text = ...
    def __init__(self,
        *,
        host : typing.Text = ...,
        port : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["host",b"host","port",b"port"]) -> None: ...
global___Endpoint = Endpoint

class MinioConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    ENDPOINT_FIELD_NUMBER: builtins.int
    ACCESS_KEY_FIELD_NUMBER: builtins.int
    SECRET_KEY_FIELD_NUMBER: builtins.int
    SECURE_FIELD_NUMBER: builtins.int
    SESSION_TOKEN_FIELD_NUMBER: builtins.int
    @property
    def endpoint(self) -> global___Endpoint:
        """where the minio server runs (host_ip:port)"""
        pass
    access_key: typing.Text = ...
    """access key of server"""

    secret_key: typing.Text = ...
    """secret key of server"""

    secure: builtins.bool = ...
    """if you need to do a secure connection "ssl" """

    session_token: typing.Text = ...
    """session_token in case you need secure connection"""

    def __init__(self,
        *,
        endpoint : typing.Optional[global___Endpoint] = ...,
        access_key : typing.Text = ...,
        secret_key : typing.Text = ...,
        secure : builtins.bool = ...,
        session_token : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["endpoint",b"endpoint"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["access_key",b"access_key","endpoint",b"endpoint","secret_key",b"secret_key","secure",b"secure","session_token",b"session_token"]) -> None: ...
global___MinioConfig = MinioConfig

class S2tCallbacks(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PRE_S2T_CALLBACKS_FIELD_NUMBER: builtins.int
    POST_S2T_CALLBACKS_FIELD_NUMBER: builtins.int
    @property
    def pre_s2t_callbacks(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def post_s2t_callbacks(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        pre_s2t_callbacks : typing.Optional[typing.Iterable[typing.Text]] = ...,
        post_s2t_callbacks : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["post_s2t_callbacks",b"post_s2t_callbacks","pre_s2t_callbacks",b"pre_s2t_callbacks"]) -> None: ...
global___S2tCallbacks = S2tCallbacks

class NluCallbacks(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PRE_NLU_CALLBACKS_FIELD_NUMBER: builtins.int
    POST_NLU_CALLBACKS_FIELD_NUMBER: builtins.int
    @property
    def pre_nlu_callbacks(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def post_nlu_callbacks(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        pre_nlu_callbacks : typing.Optional[typing.Iterable[typing.Text]] = ...,
        post_nlu_callbacks : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["post_nlu_callbacks",b"post_nlu_callbacks","pre_nlu_callbacks",b"pre_nlu_callbacks"]) -> None: ...
global___NluCallbacks = NluCallbacks

class T2sCallbacks(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    PRE_T2S_CALLBACKS_FIELD_NUMBER: builtins.int
    POST_T2S_CALLBACKS_FIELD_NUMBER: builtins.int
    @property
    def pre_t2s_callbacks(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    @property
    def post_t2s_callbacks(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        pre_t2s_callbacks : typing.Optional[typing.Iterable[typing.Text]] = ...,
        post_t2s_callbacks : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["post_t2s_callbacks",b"post_t2s_callbacks","pre_t2s_callbacks",b"pre_t2s_callbacks"]) -> None: ...
global___T2sCallbacks = T2sCallbacks

class StartCallInstanceRequest(google.protobuf.message.Message):
    """///////////
    CALLERS //
    ///////////

    parameters of a call that is to be performed
    if phone number is attached, a caller instance will be started, otherwise a listener
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SIP_CONFIG_FIELD_NUMBER: builtins.int
    SERVICES_CONFIGS_FIELD_NUMBER: builtins.int
    @property
    def sip_config(self) -> global___SIPConfig:
        """SIP service configuration"""
        pass
    @property
    def services_configs(self) -> global___CommonServicesConfigs:
        """Service Configs of Asterisk, cai,stt, tts"""
        pass
    def __init__(self,
        *,
        sip_config : typing.Optional[global___SIPConfig] = ...,
        services_configs : typing.Optional[global___CommonServicesConfigs] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["services_configs",b"services_configs","sip_config",b"sip_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["services_configs",b"services_configs","sip_config",b"sip_config"]) -> None: ...
global___StartCallInstanceRequest = StartCallInstanceRequest

class StartCallInstanceResponse(google.protobuf.message.Message):
    """response from the voip manager concerning the started call"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_FIELD_NUMBER: builtins.int
    SUCCESS_FIELD_NUMBER: builtins.int
    @property
    def request(self) -> global___StartCallInstanceRequest:
        """request sent to the voip manager"""
        pass
    success: builtins.bool = ...
    """success status"""

    def __init__(self,
        *,
        request : typing.Optional[global___StartCallInstanceRequest] = ...,
        success : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["request",b"request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request",b"request","success",b"success"]) -> None: ...
global___StartCallInstanceResponse = StartCallInstanceResponse

class StartMultipleCallInstancesRequest(google.protobuf.message.Message):
    """collection of calls to start
    if phone number is attached to the given call_id, caller instance will be started, otherwise listener
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUESTS_FIELD_NUMBER: builtins.int
    @property
    def requests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___StartCallInstanceRequest]: ...
    def __init__(self,
        *,
        requests : typing.Optional[typing.Iterable[global___StartCallInstanceRequest]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["requests",b"requests"]) -> None: ...
global___StartMultipleCallInstancesRequest = StartMultipleCallInstancesRequest

class StartMultipleCallInstancesResponse(google.protobuf.message.Message):
    """response from the voip manager concerning the multiple started calls"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_FIELD_NUMBER: builtins.int
    SUCCESS_FIELD_NUMBER: builtins.int
    @property
    def request(self) -> global___StartMultipleCallInstancesRequest:
        """request sent to the voip manager"""
        pass
    success: builtins.bool = ...
    """success status - refers to general success: False if at least one call-deployment fails,
    True if all call were successful
    """

    def __init__(self,
        *,
        request : typing.Optional[global___StartMultipleCallInstancesRequest] = ...,
        success : builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["request",b"request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request",b"request","success",b"success"]) -> None: ...
global___StartMultipleCallInstancesResponse = StartMultipleCallInstancesResponse

class StopCallInstanceRequest(google.protobuf.message.Message):
    """parameters of the call to stop"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CALL_ID_FIELD_NUMBER: builtins.int
    SIP_ID_FIELD_NUMBER: builtins.int
    call_id: typing.Text = ...
    """ID of the call"""

    sip_id: typing.Text = ...
    """ID of the ondewo-sip-sim instance"""

    def __init__(self,
        *,
        call_id : typing.Text = ...,
        sip_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["call_id",b"call_id","id",b"id","sip_id",b"sip_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["call_id",b"call_id","id",b"id","sip_id",b"sip_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["id",b"id"]) -> typing.Optional[typing_extensions.Literal["call_id","sip_id"]]: ...
global___StopCallInstanceRequest = StopCallInstanceRequest

class StopCallInstanceResponse(google.protobuf.message.Message):
    """response from the voip manager concerning the stop-call request"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_FIELD_NUMBER: builtins.int
    SUCCESS_FIELD_NUMBER: builtins.int
    LOG_MESSAGE_FIELD_NUMBER: builtins.int
    @property
    def request(self) -> global___StopCallInstanceRequest:
        """request sent to the voip manager"""
        pass
    success: builtins.bool = ...
    """whether listener was successfully stopped"""

    log_message: typing.Text = ...
    """Optional. log message"""

    def __init__(self,
        *,
        request : typing.Optional[global___StopCallInstanceRequest] = ...,
        success : builtins.bool = ...,
        log_message : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["request",b"request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["log_message",b"log_message","request",b"request","success",b"success"]) -> None: ...
global___StopCallInstanceResponse = StopCallInstanceResponse

class VoipManifestStatusRequest(google.protobuf.message.Message):
    """//////////
    STATUS //
    //////////

    get the status of a full manifest of calls to perform and listeners to deploy
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MANIFEST_ID_FIELD_NUMBER: builtins.int
    manifest_id: typing.Text = ...
    """ID of the manifest"""

    def __init__(self,
        *,
        manifest_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["manifest_id",b"manifest_id"]) -> None: ...
global___VoipManifestStatusRequest = VoipManifestStatusRequest

class VoipManifestStatus(google.protobuf.message.Message):
    """status of all manifest-associated instances"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    REQUEST_FIELD_NUMBER: builtins.int
    CALLS_STATUS_FIELD_NUMBER: builtins.int
    @property
    def request(self) -> global___VoipManifestStatusRequest: ...
    @property
    def calls_status(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___VoipStatus]:
        """status of caller instances"""
        pass
    def __init__(self,
        *,
        request : typing.Optional[global___VoipManifestStatusRequest] = ...,
        calls_status : typing.Optional[typing.Iterable[global___VoipStatus]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["request",b"request"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["calls_status",b"calls_status","request",b"request"]) -> None: ...
global___VoipManifestStatus = VoipManifestStatus

class GetVoipStatusRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CALL_ID_FIELD_NUMBER: builtins.int
    SIP_ID_FIELD_NUMBER: builtins.int
    call_id: typing.Text = ...
    """ID of the call"""

    sip_id: typing.Text = ...
    """ID of the ondewo-sip-sim instance"""

    def __init__(self,
        *,
        call_id : typing.Text = ...,
        sip_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["call_id",b"call_id","id",b"id","sip_id",b"sip_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["call_id",b"call_id","id",b"id","sip_id",b"sip_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["id",b"id"]) -> typing.Optional[typing_extensions.Literal["call_id","sip_id"]]: ...
global___GetVoipStatusRequest = GetVoipStatusRequest

class VoipStatus(google.protobuf.message.Message):
    """status of ondewo-sip-sim instance"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTHY_FIELD_NUMBER: builtins.int
    LAST_LOG_FIELD_NUMBER: builtins.int
    STATUS_ASTERISK_FIELD_NUMBER: builtins.int
    STATUS_CAI_FIELD_NUMBER: builtins.int
    STATUS_STT_FIELD_NUMBER: builtins.int
    STATUS_TTS_FIELD_NUMBER: builtins.int
    healthy: builtins.bool = ...
    """health status"""

    last_log: typing.Text = ...
    """last log voip instance"""

    @property
    def status_asterisk(self) -> global___ServiceStatus:
        """status of the associated asterisk server"""
        pass
    @property
    def status_cai(self) -> global___ServiceStatus:
        """status of the cai instance associated with the call"""
        pass
    @property
    def status_stt(self) -> global___ServiceStatus:
        """status of the associated speech-to-text service"""
        pass
    @property
    def status_tts(self) -> global___ServiceStatus:
        """status of the associated text-to-speech service"""
        pass
    def __init__(self,
        *,
        healthy : builtins.bool = ...,
        last_log : typing.Text = ...,
        status_asterisk : typing.Optional[global___ServiceStatus] = ...,
        status_cai : typing.Optional[global___ServiceStatus] = ...,
        status_stt : typing.Optional[global___ServiceStatus] = ...,
        status_tts : typing.Optional[global___ServiceStatus] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["status_asterisk",b"status_asterisk","status_cai",b"status_cai","status_stt",b"status_stt","status_tts",b"status_tts"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["healthy",b"healthy","last_log",b"last_log","status_asterisk",b"status_asterisk","status_cai",b"status_cai","status_stt",b"status_stt","status_tts",b"status_tts"]) -> None: ...
global___VoipStatus = VoipStatus

class ServiceStatus(google.protobuf.message.Message):
    """status of ondewo-cai"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    HEALTHY_FIELD_NUMBER: builtins.int
    LAST_LOG_FIELD_NUMBER: builtins.int
    healthy: builtins.bool = ...
    """health status"""

    last_log: typing.Text = ...
    """last log entry"""

    def __init__(self,
        *,
        healthy : builtins.bool = ...,
        last_log : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["healthy",b"healthy","last_log",b"last_log"]) -> None: ...
global___ServiceStatus = ServiceStatus

class UpdateServicesStatusRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CALL_ID_FIELD_NUMBER: builtins.int
    SIP_ID_FIELD_NUMBER: builtins.int
    MANIFEST_ID_FIELD_NUMBER: builtins.int
    call_id: typing.Text = ...
    """ID of the call"""

    sip_id: typing.Text = ...
    """ID of the ondewo-sip-sim instance"""

    manifest_id: typing.Text = ...
    """ID of manifest"""

    def __init__(self,
        *,
        call_id : typing.Text = ...,
        sip_id : typing.Text = ...,
        manifest_id : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["call_id",b"call_id","id",b"id","manifest_id",b"manifest_id","sip_id",b"sip_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["call_id",b"call_id","id",b"id","manifest_id",b"manifest_id","sip_id",b"sip_id"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["id",b"id"]) -> typing.Optional[typing_extensions.Literal["call_id","sip_id","manifest_id"]]: ...
global___UpdateServicesStatusRequest = UpdateServicesStatusRequest

class UpdateServicesStatusResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EMPTY_FIELD_NUMBER: builtins.int
    @property
    def empty(self) -> google.protobuf.empty_pb2.Empty: ...
    def __init__(self,
        *,
        empty : typing.Optional[google.protobuf.empty_pb2.Empty] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["empty",b"empty"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["empty",b"empty"]) -> None: ...
global___UpdateServicesStatusResponse = UpdateServicesStatusResponse

class DeployPreconditionRequest(google.protobuf.message.Message):
    """////////////////
    PRECONDITION //
    ////////////////

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SIP_SIM_VERSION_FIELD_NUMBER: builtins.int
    ASTERISK_CONFIG_FIELD_NUMBER: builtins.int
    sip_sim_version: typing.Text = ...
    """version of sip-sim to use for call"""

    @property
    def asterisk_config(self) -> global___AsteriskConfig:
        """asterisk service configuration"""
        pass
    def __init__(self,
        *,
        sip_sim_version : typing.Text = ...,
        asterisk_config : typing.Optional[global___AsteriskConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["asterisk_config",b"asterisk_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["asterisk_config",b"asterisk_config","sip_sim_version",b"sip_sim_version"]) -> None: ...
global___DeployPreconditionRequest = DeployPreconditionRequest

class DeployPreconditionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SUCCESS_FIELD_NUMBER: builtins.int
    success: builtins.bool = ...
    def __init__(self,
        *,
        success : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["success",b"success"]) -> None: ...
global___DeployPreconditionResponse = DeployPreconditionResponse

class GetManifestIDsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EMPTY_FIELD_NUMBER: builtins.int
    @property
    def empty(self) -> google.protobuf.empty_pb2.Empty: ...
    def __init__(self,
        *,
        empty : typing.Optional[google.protobuf.empty_pb2.Empty] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["empty",b"empty"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["empty",b"empty"]) -> None: ...
global___GetManifestIDsRequest = GetManifestIDsRequest

class GetManifestIDsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    MANIFEST_IDS_FIELD_NUMBER: builtins.int
    @property
    def manifest_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        manifest_ids : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["manifest_ids",b"manifest_ids"]) -> None: ...
global___GetManifestIDsResponse = GetManifestIDsResponse

class GetCallIDsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EMPTY_FIELD_NUMBER: builtins.int
    @property
    def empty(self) -> google.protobuf.empty_pb2.Empty: ...
    def __init__(self,
        *,
        empty : typing.Optional[google.protobuf.empty_pb2.Empty] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["empty",b"empty"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["empty",b"empty"]) -> None: ...
global___GetCallIDsRequest = GetCallIDsRequest

class GetCallIDsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CALL_IDS_FIELD_NUMBER: builtins.int
    @property
    def call_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        call_ids : typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["call_ids",b"call_ids"]) -> None: ...
global___GetCallIDsResponse = GetCallIDsResponse

class GetSessionIDRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CALL_ID_FIELD_NUMBER: builtins.int
    call_id: typing.Text = ...
    def __init__(self,
        *,
        call_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["call_id",b"call_id"]) -> None: ...
global___GetSessionIDRequest = GetSessionIDRequest

class GetSessionIDResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    CALL_ID_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    call_id: typing.Text = ...
    session_id: typing.Text = ...
    def __init__(self,
        *,
        call_id : typing.Text = ...,
        session_id : typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["call_id",b"call_id","session_id",b"session_id"]) -> None: ...
global___GetSessionIDResponse = GetSessionIDResponse

class ShutdownUnhealthyCallsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    EMPTY_FIELD_NUMBER: builtins.int
    @property
    def empty(self) -> google.protobuf.empty_pb2.Empty: ...
    def __init__(self,
        *,
        empty : typing.Optional[google.protobuf.empty_pb2.Empty] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["empty",b"empty"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["empty",b"empty"]) -> None: ...
global___ShutdownUnhealthyCallsRequest = ShutdownUnhealthyCallsRequest

class ShutdownUnhealthyCallsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    SUCCESS_FIELD_NUMBER: builtins.int
    success: builtins.bool = ...
    def __init__(self,
        *,
        success : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["success",b"success"]) -> None: ...
global___ShutdownUnhealthyCallsResponse = ShutdownUnhealthyCallsResponse

class GetAudioFileRequest(google.protobuf.message.Message):
    """///////////////////////
    Retrieving Audio files //
    //////////////////////////
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BUCKET_NAME_FIELD_NUMBER: builtins.int
    OBJECT_NAME_FIELD_NUMBER: builtins.int
    MINIO_CONFIG_FIELD_NUMBER: builtins.int
    bucket_name: typing.Text = ...
    object_name: typing.Text = ...
    @property
    def minio_config(self) -> global___MinioConfig:
        """Optional to add if you want to retrieve it from a specific minio server"""
        pass
    def __init__(self,
        *,
        bucket_name : typing.Text = ...,
        object_name : typing.Text = ...,
        minio_config : typing.Optional[global___MinioConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["minio_config",b"minio_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bucket_name",b"bucket_name","minio_config",b"minio_config","object_name",b"object_name"]) -> None: ...
global___GetAudioFileRequest = GetAudioFileRequest

class GetAudioFileResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUDIO_FIELD_NUMBER: builtins.int
    audio: builtins.bytes = ...
    def __init__(self,
        *,
        audio : builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["audio",b"audio"]) -> None: ...
global___GetAudioFileResponse = GetAudioFileResponse

class GetFullConversationAudioFileRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    BUCKET_NAME_FIELD_NUMBER: builtins.int
    SESSION_ID_FIELD_NUMBER: builtins.int
    MINIO_CONFIG_FIELD_NUMBER: builtins.int
    bucket_name: typing.Text = ...
    session_id: typing.Text = ...
    @property
    def minio_config(self) -> global___MinioConfig:
        """Optional to add if you want to retrieve it from a specific minio server"""
        pass
    def __init__(self,
        *,
        bucket_name : typing.Text = ...,
        session_id : typing.Text = ...,
        minio_config : typing.Optional[global___MinioConfig] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["minio_config",b"minio_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bucket_name",b"bucket_name","minio_config",b"minio_config","session_id",b"session_id"]) -> None: ...
global___GetFullConversationAudioFileRequest = GetFullConversationAudioFileRequest

class GetFullConversationAudioFileResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    AUDIO_FIELD_NUMBER: builtins.int
    audio: builtins.bytes = ...
    def __init__(self,
        *,
        audio : builtins.bytes = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["audio",b"audio"]) -> None: ...
global___GetFullConversationAudioFileResponse = GetFullConversationAudioFileResponse
